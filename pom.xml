<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.max</groupId>
    <artifactId>algorithms</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <google.guava.version>21.0</google.guava.version>
        <log4j.version>1.2.17</log4j.version>
        <jetty.version>7.2.0.v20101020</jetty.version>
        <jmh.version>1.17.3</jmh.version>
        <quasar.version>0.7.3</quasar.version>
        <akka.actor.version>2.4.8</akka.actor.version>
        <rxjava.version>1.2.5</rxjava.version>
    </properties>

    <build>
        <plugins>
            <!-- Java compile plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <executable>$(/usr/libexec/java_home -v 1.8)/bin/javac</executable>
                    <fork>true</fork>
                </configuration>
            </plugin>

            <!-- PIT, mutation test plugin -->
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.1.3</version>
                <configuration>
                    <targetClasses>
                        <param>com.max.algs.util*</param>
                    </targetClasses>
                    <targetTests>
                        <param>com.max.algs.util*</param>
                    </targetTests>
                </configuration>
            </plugin>

            <!-- Dependency plugin-->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.5.1</version>
                <executions>
                    <execution>
                        <id>getClasspathFilenames</id>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <dependencies>

        <!-- Akka actors -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.11</artifactId>
            <version>${akka.actor.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-java8-compat_2.10</artifactId>
            <version>0.5.0</version>
        </dependency>

        <!-- Quasar -->
        <dependency>
            <groupId>co.paralleluniverse</groupId>
            <artifactId>quasar-core</artifactId>
            <version>${quasar.version}</version>
        </dependency>

        <dependency>
            <groupId>co.paralleluniverse</groupId>
            <artifactId>quasar-actors</artifactId>
            <version>${quasar.version}</version>
        </dependency>

        <dependency>
            <groupId>co.paralleluniverse</groupId>
            <artifactId>quasar-galaxy</artifactId>
            <version>${quasar.version}</version>
        </dependency>

        <dependency>
            <groupId>co.paralleluniverse</groupId>
            <artifactId>quasar-reactive-streams</artifactId>
            <version>${quasar.version}</version>
        </dependency>

        <!-- Java microbenchmark harness -->
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope>
        </dependency>


        <!-- java object layout
        see: http://openjdk.java.net/projects/code-tools/jol/
        -->
        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <version>0.4-SNAPSHOT</version>
        </dependency>

        <!-- Contract annotations -->
        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>annotations</artifactId>
            <version>12.0</version>
        </dependency>

        <!-- LMAX Disruptor. A High Performance Inter-Thread Messaging Library. -->
        <dependency>
            <groupId>com.googlecode.disruptor</groupId>
            <artifactId>disruptor</artifactId>
            <version>2.7.1</version>
        </dependency>


        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.9.3</artifactId>
            <version>0.8.1-incubating</version>
        </dependency>

        <!-- Needed for Potter stemmer -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
            <version>4.6.0</version>
        </dependency>


        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
        </dependency>


        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>1.5.6</version>
        </dependency>


        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.7.2</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>


        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.2.5</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
        </dependency>


        <dependency>
            <groupId>trove</groupId>
            <artifactId>trove</artifactId>
            <version>3.0.3</version>
        </dependency>

        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-core</artifactId>
            <version>[3.0,)</version>
        </dependency>


        <dependency>
            <groupId>com.cedarsoftware</groupId>
            <artifactId>java-util</artifactId>
            <version>1.4.0</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.0</version>
        </dependency>

        <!--
        High Performance Primitive Collections.
        http://labs.carrotsearch.com/hppc.html
        -->
        <dependency>
            <groupId>com.carrotsearch</groupId>
            <artifactId>hppc</artifactId>
            <version>0.6.0</version>
        </dependency>

        <!-- neo4j database -->
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j</artifactId>
            <version>2.1.7</version>
        </dependency>


        <!-- Jersey HTTP client -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.8</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>2.5.0</version>
        </dependency>

        <!-- riak -->

        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>2.5.0</version>
        </dependency>

        <dependency>
            <groupId>com.basho.riak</groupId>
            <artifactId>riak-client</artifactId>
            <version>2.0.4</version>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.0.26.Final</version>
        </dependency>

        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.12.1.GA</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.3</version>
        </dependency>

        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
            <version>0.9.3</version>
        </dependency>

        <!-- Functional library for java (Scala like syntax) -->
        <dependency>
            <groupId>io.javaslang</groupId>
            <artifactId>javaslang-jackson</artifactId>
            <version>2.1.0-alpha</version>
        </dependency>

        <!-- OKio -->
        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
            <version>1.11.0</version>
        </dependency>

        <!-- RxJava -->
        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxjava</artifactId>
            <version>${rxjava.version}</version>
        </dependency>

        <!-- Eclipse Collections -->
        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections-api</artifactId>
            <version>8.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
            <version>8.0.0</version>
        </dependency>

        <!-- Apache kafka -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>0.10.2.0</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>sonatype-nexus-public</id>
            <name>SonaType public snapshots and releases repository</name>
            <url>https://oss.sonatype.org/content/groups/public</url>
            <releases>
                <!-- set to true if you wish to fetch releases from this repo too. -->
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

</project>
